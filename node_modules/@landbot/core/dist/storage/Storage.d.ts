export declare const ENTRY_BASE = "@landbot/core/storage";
export interface Storage {
    /**
     * Get the value of an entry path.
     */
    get: (path: string) => any;
    /**
     * Sets an entry value with a given key.
     */
    set: (path: string, value: any) => void;
    /**
     * Removes an entry value.
     */
    remove: (path: string) => void;
    setEntry: (path: string) => void;
}
/**
 * Landbot core localStorage handler.
 * Checks if localStorage is available or creates a dummy storage.
 */
export declare class LocalStorage implements Storage {
    /**
     * Entry point where storage saves all properties.
     * @type {String}
     */
    private entry;
    private storage;
    get(path: string): any;
    set(path: string, value: any): void;
    remove(path: string): void;
    /**
     * Edit the entry path where storage is saving data.
     * @example
     * ```
     * storage.setEntry('CUSTOM_ENTRY')
     * storage.entry === '@landbot/core/storage/CUSTOM_ENTRY'
     * ```
     */
    setEntry(entry: string): void;
    /**
     * Get current store state.
     */
    private _getStore;
}
/**
 * DummyStorage represents a Storage fallback.
 * Fallback may be intended or not.
 */
export declare class DummyStorage implements Storage {
    private storage;
    get(path: string): any;
    set(path: string, value: any): void;
    remove(path: string): void;
    getStore(): {};
    setEntry(): void;
}
